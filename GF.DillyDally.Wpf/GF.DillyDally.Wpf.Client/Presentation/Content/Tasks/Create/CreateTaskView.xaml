<UserControl
    x:Class="GF.DillyDally.Wpf.Client.Presentation.Content.Tasks.Create.CreateTaskView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:buttons="clr-namespace:GF.DillyDally.Wpf.Theme.Controls.Buttons;assembly=GF.DillyDally.Wpf.Theme"
    xmlns:container="clr-namespace:GF.DillyDally.Wpf.Client.Presentation.Content.Activities.Container"
    xmlns:create="clr-namespace:GF.DillyDally.Wpf.Client.Presentation.Content.Tasks.Create"
    xmlns:ctrls="http://schemas.getfunctional.de/dillydally/controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:theme="clr-namespace:GF.DillyDally.Wpf.Theme;assembly=GF.DillyDally.Wpf.Theme"
    Width="560"
    d:DataContext="{d:DesignInstance Type={x:Type create:CreateTaskViewModel}}"
    dx:ThemeManager.ThemeName="{x:Static theme:ThemeConstants.DevExpressThemeName}"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/GF.DillyDally.Wpf.Client;component/Presentation/Content/Category/SelectorTemplates.xaml" />

            </ResourceDictionary.MergedDictionaries>

            <dx:BooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" Invert="True" />

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <DataTemplate DataType="{x:Type create:CreateTaskBasicInfosViewModel}">
                <dxlc:LayoutGroup ItemSpace="25" Orientation="Vertical">
                    <ctrls:HeaderTitleContent
                        Title="Task Infos"
                        VerticalAlignment="Top"
                        Description="It's best to keep the name short and then add the details in the task Body. Also select a category that Matches the Topic best. "
                        HeaderType="H2" />
                    <dxlc:LayoutGroup VerticalAlignment="Top" Orientation="Horizontal">
                        <ctrls:ImageInputControl Width="162" Height="134" />
                        <dxlc:LayoutGroup Orientation="Vertical">
                            <ctrls:TextInputControl
                                InputValue="{Binding TaskName, Mode=TwoWay}"
                                IsRequired="True"
                                Label="Title"
                                WatermarkText="Give your Task a self explanatory title" />
                            <ContentControl Content="{Binding CategorySelectorViewModel, Mode=OneWay}" ContentTemplate="{StaticResource CategorySelectorTemplate}" />
                        </dxlc:LayoutGroup>
                    </dxlc:LayoutGroup>
                </dxlc:LayoutGroup>
            </DataTemplate>

            <DataTemplate DataType="{x:Type create:CreateTaskActivitiesViewModel}">
                <dxlc:LayoutGroup ItemSpace="25" Orientation="Vertical">
                    <ctrls:HeaderTitleContent
                        Title="Activities Infos"
                        VerticalAlignment="Top"
                        Description="Does this Task realate to existing activities?"
                        HeaderType="H2" />

                    <container:ActivityContainerView DataContext="{Binding ActivityContainerViewModel, Mode=OneWay}" />
                </dxlc:LayoutGroup>
            </DataTemplate>

            <DataTemplate DataType="{x:Type create:CreateTaskAdditionalInfosViewModel}">
                <dxlc:LayoutGroup Orientation="Vertical">
                    <ctrls:DateInputControl
                        VerticalAlignment="Top"
                        InputValue="{Binding DueDate, Mode=TwoWay}"
                        Label="Due Date"
                        WatermarkText="When do you want to finish this task?" />
                    <ctrls:TextInputControl
                        VerticalAlignment="Top"
                        InputValue="{Binding DefinitionOfDone, Mode=TwoWay}"
                        Label="Definiton of Done"
                        WatermarkText="Describe when your task is done." />
                    <ctrls:TextInputControl
                        InputValue="{Binding Description, Mode=TwoWay}"
                        IsMultiline="True"
                        Label="Description" />
                </dxlc:LayoutGroup>
            </DataTemplate>

        </ResourceDictionary>
    </UserControl.Resources>

    <ctrls:Form
        Title="Create Task"
        CloseCommand="{Binding CancelProcessCommand, Mode=OneWay}"
        Description="Many people keep a list of things to do — on paper, in a spreadsheet, or by using a combination of paper and electronic methods.">
        <ctrls:Form.Content>
            <ctrls:PagedContentControl x:Name="PagedContent" ItemsSource="{Binding Pages, Mode=OneWay}" />
        </ctrls:Form.Content>
        <ctrls:Form.FooterContent>
            <dxlc:LayoutGroup Orientation="Horizontal">
                <buttons:ColoredButtonControl
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Command="{Binding ElementName=PagedContent, Path=PreviousPageCommand}"
                    Content="Previous"
                    Visibility="{Binding ElementName=PagedContent, Path=HasMultiplePages, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <buttons:ColoredButtonControl
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    ButtonColor="Blue"
                    Command="{Binding ElementName=PagedContent, Path=NextPageCommand}"
                    Content="Next"
                    Visibility="{Binding ElementName=PagedContent, Path=HasMultiplePages, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <buttons:ColoredButtonControl
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    ButtonColor="Blue"
                    Command="{Binding Path=CreateTaskCommand}"
                    Content="Finish"
                    Visibility="{Binding ElementName=PagedContent, Path=HasNextPage, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" />
            </dxlc:LayoutGroup>
        </ctrls:Form.FooterContent>
    </ctrls:Form>
</UserControl>