<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shared="clr-namespace:GF.DillyDally.Wpf.Theme.Controls.Shared">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/GF.DillyDally.Wpf.Theme;component/Themes/T2019/Shared/Shapes.xaml" />
        <ResourceDictionary Source="pack://application:,,,/GF.DillyDally.Wpf.Theme;component/StyleGuide/Colors.xaml" />

    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="LoadingIndicatorBorderBrush" Color="{StaticResource InputControlsBorderColor}" />
    <SolidColorBrush x:Key="LoadingIndicatorBackgroundBrush" Color="{StaticResource Layer1BackgroundColor}" />

    <ControlTemplate x:Key="LoadingIndicatorCircleTemplate" TargetType="{x:Type ProgressBar}">
        <Grid x:Name="TemplateRoot">
            <Path
                x:Name="Content"
                RenderTransformOrigin="0.5,0.5"
                Style="{StaticResource UiShape.WaitIndicator}">
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform Angle="0" />
                        <TranslateTransform />
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Determinate" />
                    <VisualState x:Name="Indeterminate">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames
                                RepeatBehavior="Forever"
                                Storyboard.TargetName="Content"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="359" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="LoadingIndicatorControlTemplate" TargetType="{x:Type shared:LoadingIndicatorControl}">
        <Border
            x:Name="Root"
            Padding="24"
            Background="{StaticResource LoadingIndicatorBackgroundBrush}"
            BorderBrush="{StaticResource LoadingIndicatorBorderBrush}"
            BorderThickness="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="6" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ProgressBar
                    x:Name="progressBar"
                    Grid.Column="0"
                    Width="26"
                    Height="26"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    IsIndeterminate="True"
                    Template="{StaticResource LoadingIndicatorCircleTemplate}" />
                <ContentPresenter
                    Grid.Column="2"
                    Margin="{TemplateBinding Padding}"
                    VerticalAlignment="Center"
                    Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
                    ContentTemplate="{TemplateBinding ContentTemplate}" />
            </Grid>
        </Border>
    </ControlTemplate>

    <DataTemplate x:Key="DefaultLoadingIndicatorTemplate">
        <TextBlock
            VerticalAlignment="Center"
            Text="{Binding}"
            TextWrapping="Wrap" />
    </DataTemplate>

    <Style x:Key="DefaultLoadingIndicatorControlStyle" TargetType="{x:Type shared:LoadingIndicatorControl}">
        <Setter Property="Content" Value="Loading..." />
        <Setter Property="ContentTemplate" Value="{StaticResource DefaultLoadingIndicatorTemplate}" />
        <Setter Property="Template" Value="{StaticResource LoadingIndicatorControlTemplate}" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Width" Value="Auto" />
    </Style>

</ResourceDictionary>