<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:GF.DillyDally.Wpf.Theme.Converter"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:fa5="http://schemas.fontawesome.com/icons/"
    xmlns:input="clr-namespace:GF.DillyDally.Wpf.Theme.Controls.Input"
    xmlns:theme="clr-namespace:GF.DillyDally.Wpf.Theme">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/GF.DillyDally.Wpf.Theme;component/StyleGuide/Colors.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/GF.DillyDally.Wpf.Theme;component/StyleGuide/Typography.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="ImageContentForegroundBrush" Color="{StaticResource InputControlsValueForegroundColor}" />
    <SolidColorBrush x:Key="ImageBorderBrush" Color="{StaticResource InputControlsBorderColor}" />
    <SolidColorBrush x:Key="ImageSelectedBorderBrush" Color="{StaticResource InputControlsSelectedBorderColor}" />
    <SolidColorBrush x:Key="ImageHoverBorderBrush" Color="{StaticResource InputControlsHoverBorderColor}" />
    <converter:BooleanToThicknessConverter x:Key="BooleanToThicknessConverter" />

    <ControlTemplate x:Key="EmptyImageControlTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.15*" />
                <RowDefinition Height="0.5*" />
                <RowDefinition Height="0.35*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.25*" />
                <ColumnDefinition Width="0.5*" />
                <ColumnDefinition Width="0.25*" />
            </Grid.ColumnDefinitions>
            <fa5:FontAwesome
                Grid.Row="1"
                Grid.Column="1"
                FontSize="52"
                Foreground="{StaticResource ImageContentForegroundBrush}"
                Icon="Regular_Image" />
            <WrapPanel
                Grid.Row="2"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                HorizontalAlignment="Center"
                Orientation="Vertical">
                <TextBlock
                    Style="{StaticResource H3TextBlockStyle}"
                    Text="Add Image"
                    TextAlignment="Center" />
                <TextBlock
                    Style="{StaticResource DescriptionTextBlockStyle}"
                    Text="(Minimal Titleize 1600x900px)"
                    TextAlignment="Center" />
            </WrapPanel>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ImageEditorControlTemplate" TargetType="{x:Type input:ImageInputControl}">
        <Border
            dx:FocusHelper2.Focusable="False"
            BorderThickness="{Binding ElementName=ImageEdit, Path=HasImage, Converter={StaticResource BooleanToThicknessConverter}}"
            CornerRadius="3">
            <Border.BorderBrush>
                <VisualBrush>
                    <VisualBrush.Visual>
                        <Rectangle
                            x:Name="ImageBorder"
                            Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                            Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"
                            Stroke="{StaticResource ImageBorderBrush}"
                            StrokeDashArray="4 2"
                            StrokeThickness="1" />
                    </VisualBrush.Visual>
                </VisualBrush>
            </Border.BorderBrush>
            <dxe:ImageEdit
                x:Name="ImageEdit"
                dx:ThemeManager.ThemeName="{x:Static theme:ThemeConstants.DevExpressThemeName}"
                AllowNullInput="True"
                BorderThickness="0"
                EditValue="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageBytes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                EmptyContentTemplate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NoImageControlTemplate}"
                IsReadOnly="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsReadOnly}"
                ShowBorder="False"
                ShowMenu="False"
                Stretch="Uniform" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter TargetName="ImageBorder" Property="Stroke" Value="{StaticResource ImageSelectedBorderBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="False">
                <Setter TargetName="ImageBorder" Property="Stroke" Value="{StaticResource ImageBorderBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsKeyboardFocusWithin" Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="ImageBorder" Property="Stroke" Value="{StaticResource ImageHoverBorderBrush}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="DefaultStyle" TargetType="{x:Type input:ImageInputControl}">
        <Setter Property="Template" Value="{StaticResource ImageEditorControlTemplate}" />
        <Setter Property="IsReadOnly" Value="False" />
        <Setter Property="NoImageControlTemplate" Value="{StaticResource EmptyImageControlTemplate}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Width" Value="162" />
        <Setter Property="Height" Value="134" />
    </Style>

    <Style BasedOn="{StaticResource DefaultStyle}" TargetType="{x:Type input:ImageInputControl}" />

</ResourceDictionary>