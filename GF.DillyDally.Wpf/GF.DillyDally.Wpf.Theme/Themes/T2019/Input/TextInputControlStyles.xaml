<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
    xmlns:input="clr-namespace:GF.DillyDally.Wpf.Theme.Controls.Input"
    xmlns:theme="clr-namespace:GF.DillyDally.Wpf.Theme">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/GF.DillyDally.Wpf.Theme;component/StyleGuide/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/GF.DillyDally.Wpf.Theme;component/StyleGuide/Typography.xaml" />
        <ResourceDictionary Source="pack://application:,,,/GF.DillyDally.Wpf.Theme;component/Themes/T2019/Input/LabelStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="TextInputBorderBrush" Color="{StaticResource InputControlsBorderColor}" />
    <SolidColorBrush x:Key="TextInputSelectedBorderBrush" Color="{StaticResource InputControlsSelectedBorderColor}" />
    <SolidColorBrush x:Key="TextInputHoverBorderBrush" Color="{StaticResource InputControlsHoverBorderColor}" />
    <SolidColorBrush x:Key="InputControlsValueForegroundBrush" Color="{StaticResource InputControlsValueForegroundColor}" />

    <ControlTemplate x:Key="ValidationErrorTemplate">
        <Border
            dx:FocusHelper2.Focusable="False"
            BorderBrush="Red"
            BorderThickness="1"
            CornerRadius="3">
            <AdornedElementPlaceholder />
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="DefaultTextInputControlTemplate" TargetType="{x:Type input:TextInputControl}">
        <dxlc:LayoutItem
            dx:FocusHelper2.Focusable="False"
            IsRequired="{TemplateBinding IsRequired}"
            IsTabStop="False"
            Label="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Label, Mode=TwoWay}"
            Style="{StaticResource InputControlLabelStyle}">
            <Border
                x:Name="TextInputBorder"
                dx:FocusHelper2.Focusable="False"
                BorderBrush="{StaticResource TextInputBorderBrush}"
                BorderThickness="1"
                CornerRadius="3">
                <dxe:TextEdit
                    x:Name="TextInput"
                    Height="34"
                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                    dx:FocusHelper2.Focusable="True"
                    dx:ThemeManager.ThemeName="{x:Static theme:ThemeConstants.DevExpressThemeName}"
                    AcceptsReturn="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMultiline, Mode=TwoWay}"
                    EditValue="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InputValue, ValidatesOnNotifyDataErrors=True, Mode=TwoWay}"
                    FontSize="{StaticResource InputControlsFontSize}"
                    FontWeight="Regular"
                    Foreground="{StaticResource InputControlsValueForegroundBrush}"
                    IsTabStop="True"
                    NullText="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=WatermarkText, Mode=TwoWay}"
                    SelectAllOnGotFocus="True"
                    ShowBorder="False"
                    ShowErrorToolTip="True"
                    ShowNullText="True"
                    Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                    Validation.ValidationAdornerSiteFor="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
            </Border>
        </dxlc:LayoutItem>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMultiline" Value="True">
                <Setter TargetName="TextInput" Property="VerticalContentAlignment" Value="Top" />
                <Setter TargetName="TextInput" Property="Height" Value="160" />
            </Trigger>
            <Trigger Property="IsMultiline" Value="False">
                <Setter TargetName="TextInput" Property="VerticalContentAlignment" Value="Center" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter TargetName="TextInputBorder" Property="BorderBrush" Value="{StaticResource TextInputSelectedBorderBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="False">
                <Setter TargetName="TextInputBorder" Property="BorderBrush" Value="{StaticResource TextInputBorderBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsKeyboardFocusWithin" Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="TextInputBorder" Property="BorderBrush" Value="{StaticResource TextInputHoverBorderBrush}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="DefaultTextInputControlStyle" TargetType="{x:Type input:TextInputControl}">
        <Setter Property="Template" Value="{StaticResource DefaultTextInputControlTemplate}" />
        <Setter Property="IsMultiline" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource DefaultTextInputControlStyle}" TargetType="{x:Type input:TextInputControl}" />

</ResourceDictionary>